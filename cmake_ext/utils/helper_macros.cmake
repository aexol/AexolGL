set(_helper_macros_dir ${CMAKE_CURRENT_LIST_DIR})
macro(GET_TARGET_PYTHON_VER TARGET_PYTHON_VER)
    if(NOT ANDROID)
        find_package(PkgConfig)
        if(PKG_CONFIG_FOUND)
            pkg_check_modules(PC_PYTHON python)
            if(PC_PYTHON_FOUND)
                set(${TARGET_PYTHON_VER} ${PC_PYTHON_VERSION})
            endif(PC_PYTHON_FOUND)
        endif(PKG_CONFIG_FOUND)
    endif()

    if(NOT PKG_CONFIG_FOUND OR NOT PC_PYTHON_FOUND)
        # Try to figure out python version based on interpreter version if PkgConfig search failed
        find_package(PythonInterp)
        if(PYTHONINTERP_FOUND)
            set(${TARGET_PYTHON_VER} "${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}")
        endif(PYTHONINTERP_FOUND)
    endif(NOT PKG_CONFIG_FOUND OR NOT PC_PYTHON_FOUND)
endmacro(GET_TARGET_PYTHON_VER TARGET_PYTHON_VER)

function(CAPITALIZE IN OUT)
    string(SUBSTRING ${IN} 0 1 FIRST_LETTER)
    string(SUBSTRING ${IN} 1 -1 REST)
    string(TOUPPER ${FIRST_LETTER} FIRST_LETTER)
    string(TOLOWER ${REST} REST)
    set(${OUT} "${FIRST_LETTER}${REST}" PARENT_SCOPE)
endfunction()

if(ANDROID)
    include(${_helper_macros_dir}/android_macros.cmake)
endif()
if(IOS)
    include(${_helper_macros_dir}/ios_macros.cmake)
endif()

function(add_library_common)
    if(NOT ANDROID)
        add_library(${ARGN})
    else()
        add_android_library(${ARGN})
    endif()
endfunction()

function(add_executable_common)
    if(NOT ANDROID)
        add_executable(${ARGN})
    else()
        add_android_executable(${ARGN})
    endif()
endfunction()

if(NOT KEEP_MODULE_PATH)
    get_filename_component(_cmake_support_path "${CMAKE_CURRENT_LIST_FILE}" PATH)
    get_filename_component(_cmake_support_path "${_cmake_support_path}" PATH)
    set(CMAKE_MODULE_PATH
        "${_cmake_support_path}/Modules"
        ${CMAKE_MODULE_PATH}
        )
    set(AexolGL_DIR ${_cmake_support_path}/AexolGL)
    set(AexolFB_DIR ${_cmake_support_path}/AexolFB)
    set(AexolHDW_DIR ${_cmake_support_path}/AexolHDW)
    set(AexolAds_DIR ${_cmake_support_path}/AexolAds)
    unset(_cmake_support_path)
endif()
